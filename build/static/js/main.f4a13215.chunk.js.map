{"version":3,"sources":["components/DropDown.js","components/Output.js","components/Variables.js","App.js","serviceWorker.js","index.js"],"names":["DropdownExampleSearchSelection","name","list","handler","Dropdown","fluid","selection","onChange","_","data","console","log","value","options","defaultValue","Output","children","Segment","Cointainer","styled","div","Pair","obj","updater","index","useState","setValue","Input","placeholder","Object","keys","e","target","entries","Variables","varList","createNewFeild","style","marginTop","map","i","Button","onClick","primary","width","justifySelf","VariableCointainer","ButtonCointainer","App","isEditorReady","setIsEditorReady","language","setLanguage","theme","setTheme","output","setOutput","loading","setLoading","$i","setVarList","valueGetter","useRef","arr","push","key","text","editorDidMount","_valueGetter","current","varObj","length","startsWith","d","python","javascript","php","var_obj","fetch","headers","Accept","method","body","JSON","stringify","then","res","json","catch","fetchData","disabled","minWidth","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f4a13215.chunk.js","sourcesContent":["import React from \"react\";\nimport { Dropdown, Button } from \"semantic-ui-react\";\n\nconst DropdownExampleSearchSelection = ({ name, list, handler }) => (\n    <Dropdown\n      fluid\n      selection\n      onChange={(_, data) => {\n        console.log(data.value);\n        handler(data.value);\n      }}\n      options={list}\n      defaultValue={name}\n    />\n);\n\nexport default DropdownExampleSearchSelection;\n","import React from \"react\";\nimport { Segment } from \"semantic-ui-react\";\n\nconst Output = ({ children }) => <Segment>{children}</Segment>;\n\nexport default Output;\n","import React, { useState, useEffect } from \"react\";\nimport { Input, Button } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\n\nconst Cointainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: repeat(auto-fit));\n    row-gap:10px;\n    text-align:center;\n    \n`;\nconst Variables = ({ varList, updater, createNewFeild }) => {\n  return (\n    <Cointainer>\n      <h3 style={{ marginTop: \"auto\" }}>Name </h3>\n      <h3 style={{ marginTop: \"auto\" }}>Value</h3>\n      {varList.map((obj, i) => (\n        <Pair obj={obj} index={i} updater={updater} />\n      ))}\n      <div></div>\n      <Button\n        onClick={() => {\n          createNewFeild({ \"\": \"\" });\n        }}\n        primary\n        style={{ width: \"160px\", justifySelf: \"right\" }}\n      >\n        Add Param\n      </Button>\n    </Cointainer>\n  );\n};\n\nconst Pair = ({ obj, updater, index }) => {\n  let [value, setValue] = useState(obj);\n  return (\n    <>\n      <Input\n        placeholder=\"$name\"\n        value={Object.keys(value)[0]}\n        onChange={(e) => {\n          setValue({ [e.target.value]: Object.entries(value)[0][1] });\n          updater(index, { [e.target.value]: Object.entries(value)[0][1] });\n        }}\n      />\n      <Input\n        value={Object.entries(value)[0][1]}\n        placeholder=\"2\"\n        onChange={(e) => {\n          setValue({ [Object.keys(value)[0]]: e.target.value });\n          updater(index, { [Object.keys(value)[0]]: e.target.value });\n        }}\n      />\n    </>\n  );\n};\n\nexport default Variables;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport DropdownExampleSearchSelection from \"./components/DropDown\";\nimport Output from \"./components/Output\";\nimport Variables from \"./components/Variables\";\nimport Editor from \"@monaco-editor/react\";\nimport styled from \"styled-components\";\nimport { Button } from \"semantic-ui-react\";\nimport _ from \"lodash\";\n\nconst Cointainer = styled.div`\n  display: grid;\n  margin-left: 90px;\n  margin-right: 90px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  grid-template-rows: 40px 80vh 40px;\n  row-gap: 10px;\n`;\nconst VariableCointainer = styled.div`\n  display: grid;\n  margin: 0 200px;\n`;\nconst ButtonCointainer = styled.div`\n  display: grid;\n  justify-self: right;\n  grid-template-columns: 100px 100px;\n  column-gap: 10px;\n  justify-content: center;\n`;\n\nfunction App() {\n  const [isEditorReady, setIsEditorReady] = useState(false);\n  const [language, setLanguage] = useState(\"javascript\");\n  const [theme, setTheme] = useState(\"dark\");\n  const [output, setOutput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [varList, setVarList] = useState([{ $i: 1 }]);\n  const valueGetter = useRef();\n\n  function handleEditorDidMount(_valueGetter) {\n    setIsEditorReady(true);\n    valueGetter.current = _valueGetter;\n  }\n\n  let updater = (index, obj) => {\n    let arr = [...varList];\n    arr[index] = obj;\n    console.log(arr);\n    setVarList(arr);\n  };\n\n  let createNewFeild = (obj) => {\n    let arr = [...varList];\n    arr.push(obj);\n    setVarList(arr);\n  };\n\n  let fetchData = () => {\n    let types = { python: \"python\", javascript: \"node\", php: \"php\" };\n    let varObj = {};\n    for (let i = 0; i < varList.length; i++) {\n      let key = Object.keys(varList[i])[0];\n      if (key === \"$\") continue;\n      let name = key.startsWith(\"$\") ? key : \"$\" + key;\n      varObj[name] = Object.entries(varList[i])[0][1];\n    }\n    console.log(\"varObj\", varObj);\n    let d = {\n      name: types[language],\n      var_obj: varObj,\n      text: valueGetter.current(),\n    };\n    console.log(\"hello fetch\");\n    setLoading(true);\n\n    fetch(\"https://via-socket.herokuapp.com/parser\", {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"POST\",\n      body: JSON.stringify(d),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setOutput(data.output);\n        setLoading(false);\n      })\n      .catch(function (res) {\n        console.log(res);\n        setLoading(false);\n      });\n  };\n\n  function handleShowValue() {\n    fetchData();\n  }\n\n  return (\n    <>\n      <VariableCointainer>\n        <Variables\n          varList={varList}\n          createNewFeild={createNewFeild}\n          updater={updater}\n        />\n      </VariableCointainer>\n      <Cointainer>\n        <ButtonCointainer>\n          <DropdownExampleSearchSelection\n            name={theme}\n            handler={setTheme}\n            list={[\"dark\", \"light\"].map((i) => ({ key: i, text: i, value: i }))}\n          />\n          <DropdownExampleSearchSelection\n            name={language}\n            handler={setLanguage}\n            list={[\"javascript\", \"python\", \"php\"].map((i) => ({\n              key: i,\n              text: i,\n              value: i,\n            }))}\n          />\n        </ButtonCointainer>\n        <Editor\n          value={\"\"}\n          language={language}\n          theme={theme}\n          editorDidMount={handleEditorDidMount}\n        />\n        <Button\n          style={{ width: \"160px\", justifySelf: \"right\" }}\n          primary={!loading}\n          onClick={handleShowValue}\n          disabled={!isEditorReady}\n        >\n          {loading ? \"Running\" : \"Run\"}\n        </Button>\n        <h1>Output</h1>\n        <Output style={{ minWidth: \"40px\" }}>{output}</Output>\n      </Cointainer>\n    </>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}